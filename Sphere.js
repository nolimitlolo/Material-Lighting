// ==========================================================================
// $Id: Box.js,v 1.1 2019/03/08 22:42:41 jlang Exp $
// Simple box shape object
// ==========================================================================
// (C)opyright:
//
//   Jochen Lang
//   EECS, University of Ottawa
//   800 King Edward Ave.
//   Ottawa, On., K1N 6N5
//   Canada.
//   http://www.eecs.uottawa.ca
//
// Creator: jlang (Jochen Lang)
// Email:   jlang@eecs.uottawa.ca
// ==========================================================================
// $Log: Box.js,v $
// Revision 1.1  2019/03/08 22:42:41  jlang
// First draft of material lab
//
// Revision 1.1  2019/03/04 03:31:16  jlang
// Initial draft. No lighting yet.
//
// Revision 1.2  2019/02/27 03:10:37  jlang
// Element-based drawing
//
// Revision 1.1  2019/02/19 22:17:06  jlang
// Intial (incomplete) boxes laboratory.
//
// Revision 1.2  2019/02/14 0
// ==========================================================================


// Constructor
function SphereShape(attributes) {
	RenderShape.call(this,attributes)
	this.vertex = new Float32Array([
		0.000000, 0.850651, 0.525731,
		0.000000, 0.850651, -0.525731,
		0.000000, -0.850651, 0.525731,

		0.000000, -0.850651, -0.525731,
		0.850651, 0.525731, 0.000000,
		0.850651, -0.525731, 0.000000,

		-0.850651, 0.525731, 0.000000, 
		-0.850651, -0.525731, 0.000000, 
		0.525731, 0.000000, 0.850651, 

		-0.525731, 0.000000, 0.850651, 
		0.525731, 0.000000, -0.850651, 
		-0.525731, 0.000000, -0.850651,

		0.000000, 1.000000, 0.000000,
		0.500000, 0.809017, 0.309017, 
		0.500000, 0.809017, -0.309017, 

		-0.500000, 0.809017, -0.309017,
		-0.500000, 0.809017, 0.309017, 
		0.000000, -1.000000, 0.000000,

		0.500000, -0.809017, -0.309017, 
		0.500000, -0.809017, 0.309017, 
		-0.500000, -0.809017, 0.309017,

		-0.500000, -0.809017, -0.309017,
		1.000000, 0.000000, 0.000000, 
		0.809017, -0.309017, -0.500000, 

		0.809017, 0.309017, -0.500000, 
		0.809017, 0.309017, 0.500000, 
		0.809017, -0.309017, 0.500000, 

		-1.000000, 0.000000, 0.000000, 
		-0.809017, -0.309017, 0.500000, 
		-0.809017, 0.309017, 0.500000, 

		-0.809017, 0.309017, -0.500000,
		-0.809017, -0.309017, -0.500000,
		0.000000, 0.000000, 1.000000, 

		-0.309017, -0.500000, 0.809017, 
		0.309017, -0.500000, 0.809017,
		0.309017, 0.500000, 0.809017,

		-0.309017, 0.500000, 0.809017, 
		0.000000, 0.000000, -1.000000, 
		-0.309017, 0.500000, -0.809017, 

		0.309017, 0.500000, -0.809017, 
		0.309017, -0.500000, -0.809017, 
		-0.309017, -0.500000, -0.809017,
	]);

	this.normal = new Float32Array([
		-0.89432084, 0, 0,
		0, 0, 0,
		-0.89432084, 0, 0,
		
		0.27636, -0.44716042, 0.72352,
		0, 0, -0.89432084,
		0, 0, 0,

		0, 0, 0.89432084,
		-0.44716, 0.72352, 0.27636,
		0, -0.89432084, 0,

		0, 0, 0,
		0, 0.89432084, 0,
		0,850651, 0, -0.525731,

		-0.309017, 0, 0.5,
		-0.5, 0.309017, 0,
		0, -0.309017, -809017,

		0.5, 0.309017, 0,
		0.309017, 0, 0.5,
		-0.309017, 0, -0.5,
		
		-0.5, -0.309017, 0,
		0, 0.309017, 0.809017,
		0.5, -0.309017, 0,

		0, 0.309017, -0.809017,
		0, 0.5, -0.309017,
		-0.309017, 0, -0.5,

		0.309017, -0.809017, 0,
		-0.309017, 0, 0.5,
		0, -0.5, -0.309017,

		0, -0.5, -0.309017,
		-0.309017, 0, -0.5,
		0.309017, 0.809017, 0,

		-0.309017, 0, 0.5,
		0.309017, -0.809017, 0,
		0.5, -0.309017, 0,

		0, 0.5, 0.309017,
		0.809017, 0, -0.309017,
		0, 0.5, 0.309017,

		0.5, 0.309017, 0,
		0.5, 0.309017, 0,
		0, -0.5, -0.309017,

		0.809017, 0, 0.309017,
		0, 0.5, -0.309017,
		-0.5, 0.309017, 0,
	]);

	this.normal2 = new Float32Array([
		0.000000, 0.850651, 0.525731,
		0.000000, 0.850651, -0.525731,
		0.000000, -0.850651, 0.525731,

		0.000000, -0.850651, -0.525731,
		0.850651, 0.525731, 0.000000,
		0.850651, -0.525731, 0.000000,

		-0.850651, 0.525731, 0.000000, 
		-0.850651, -0.525731, 0.000000, 
		0.525731, 0.000000, 0.850651, 

		-0.525731, 0.000000, 0.850651, 
		0.525731, 0.000000, -0.850651, 
		-0.525731, 0.000000, -0.850651,

		0.000000, 1.000000, 0.000000,
		0.500000, 0.809017, 0.309017, 
		0.500000, 0.809017, -0.309017, 

		-0.500000, 0.809017, -0.309017,
		-0.500000, 0.809017, 0.309017, 
		0.000000, -1.000000, 0.000000,

		0.500000, -0.809017, -0.309017, 
		0.500000, -0.809017, 0.309017, 
		-0.500000, -0.809017, 0.309017,

		-0.500000, -0.809017, -0.309017,
		1.000000, 0.000000, 0.000000, 
		0.809017, -0.309017, -0.500000, 

		0.809017, 0.309017, -0.500000, 
		0.809017, 0.309017, 0.500000, 
		0.809017, -0.309017, 0.500000, 

		-1.000000, 0.000000, 0.000000, 
		-0.809017, -0.309017, 0.500000, 
		-0.809017, 0.309017, 0.500000, 

		-0.809017, 0.309017, -0.500000,
		-0.809017, -0.309017, -0.500000,
		0.000000, 0.000000, 1.000000, 

		-0.309017, -0.500000, 0.809017, 
		0.309017, -0.500000, 0.809017,
		0.309017, 0.500000, 0.809017,

		-0.309017, 0.500000, 0.809017, 
		0.000000, 0.000000, -1.000000, 
		-0.309017, 0.500000, -0.809017, 

		0.309017, 0.500000, -0.809017, 
		0.309017, -0.500000, -0.809017, 
		-0.309017, -0.500000, -0.809017,
	]);


	this.index = new Int8Array([
		12, 13, 14, 255,
		12, 15, 16, 255,
		17, 18, 19, 255,
		17, 20, 21, 255,
		22, 23, 24, 255,
		22, 25, 26, 255,
		27, 28, 29, 255,
		27, 30, 31, 255,
		32, 33, 34, 255,
		32, 35, 36, 255,
		37, 38, 39, 255,
		37, 40, 41, 255,
		35, 25, 13, 255,
		16, 29, 36, 255,
		14, 24, 39, 255,
		38, 30, 15, 255,
		19, 26, 34, 255,
		33, 28, 20, 255,
		40, 23, 18, 255,
		21, 31, 41, 255,
		1, 12, 14, 255,
		12, 0, 13, 255,
		14, 13, 4, 255,
		0, 12, 16, 255,
		12, 1, 15, 255,
		16, 15, 6, 255,
		2, 17, 19, 255,
		17, 3, 18, 255,
		19, 18, 5, 255,
		3, 17, 21, 255,
		17, 2, 20, 255,
		21, 20, 7, 255,
		4, 22, 24, 255,
		22, 5, 23, 255,
		24, 23, 10, 255,
		5, 22, 26, 255,
		22, 4, 25, 255,
		26, 25, 8, 255,
		6, 27, 29, 255,
		27, 7, 28, 255,
		29, 28, 9, 255,
		7, 27, 31, 255,
		27, 6, 30, 255,
		31, 30, 11, 255,
		8, 32, 34, 255,
		32, 9, 33, 255,
		34, 33, 2, 255,
		9, 32, 36, 255,
		32, 8, 35, 255,
		36, 35, 0, 255,
		10, 37, 39, 255,
		37, 11, 38, 255,
		39, 38, 1, 255,
		11, 37, 41, 255,
		37, 10, 40, 255,
		41, 40, 3, 255,
		0, 35, 13, 255,
		35, 8, 25, 255,
		13, 25, 4, 255,
		0, 16, 36, 255,
		16, 6, 29, 255,
		36, 29, 9, 255,
		1, 14, 39, 255,
		14, 4, 24, 255,
		39, 24, 10, 255,
		1, 38, 15, 255,
		38, 11, 30, 255,
		15, 30, 6, 255,
		2, 19, 34, 255,
		19, 5, 26, 255,
		34, 26, 8, 255,
		2, 33, 20, 255,
		33, 9, 28, 255,
		20, 28, 7, 255,
		3, 40, 18, 255,
		40, 10, 23, 255,
		18, 23, 5, 255,
		3, 21, 41, 255,
		21, 7, 31, 255,
		41, 31, 11, 255,
	]);


	this.n_faces_direct = 12;
	__proto__: RenderShape
}